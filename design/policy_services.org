This purpose of this document is to design the split of work between the search algorithm and the policies:
* General principles:
- The algorithm should be as simple as possible. The specific behaviors should occur in the policies as much as possible.
- The algorithm needs to provide services needed to support all the behaviors that need to occur in the policies.
- When the algorithm needs to branch only sometimes depending on the results produced by the policy, compile-time checks need to be used to determine whether branching is needed. The policies need to provide information needed for those compile-time checks.
* Consequences of the principles:
- Function members of the policies need to accept an algorithm reference argument, so that they can call the services provided by the algorithm. Consequently, they need to be function templates.
